https://blog.csdn.net/robinhjwy/article/details/78576589


#ifndef CAMERA_H防止了类被重复定义
#define CAMERA_H定了一个头文件


typedef 主要是自定义了一个智能指针Ptr（关键还是类类指针），
在某些情况下这个指针定义的是静态指针，比如在congfig中，因为所有的参数都由它来提供，有且只有一个，不需要重复new 对象了。
还有就是～后面的析构函数，就是为了释放内存，函数开辟了内存空间，赋予生命，那么析够函数就是结束它的生命了。


camera.cpp世界坐标系，相机坐标系，像素坐标之间的变换.
config.cpp主要通过setParameterFile( const std::string& filename )，将参数文件传进去，通过get函数获取对应的参数，get函数是个泛类型，具体方法直接写在了congfig.h之中。


在增量式的三维重建中，第一个相机的坐标系就是世界坐标系，其他的相机都是以第一个相机的坐标系为参考标准的。但是由于尺度不确定性，相邻两张照片之间做匹配的到的旋转向量可以转化到以第一个相机坐标系为准，但是两者之间的平移向量是个单位向量，所以得用PNP ICP来求位姿

Tcw是world to camera，程序中应该是用的Twc=T_c_w_.inverse(）。第一帧为世界坐标系，所以是把Twc当做位姿，取出其中的t就是第一帧到当前帧的平移t，即光心位置。




在两两帧的VO中，过于依赖参考帧，因为一旦参考帧丢失，就无法进行下去。
在0.4版本，采用地图VO ，每一帧为地图贡献一些信息，比如添加新的特征点或更新旧特征点的位置估计。
地图中的特征点一般都是使用世界坐标，所以当前帧到来时，匹配它和地图之间运动关系可以直接得到Tcw。(世界坐标系下的该帧的位姿)
维护一个不断更新的地图，只要地图正确，即使中间某帧出了问题，不至于崩溃。
另外地图分为局部和全局。这里我们实时定位的需要的是局部地图，全局地图一般用于回环检测和整体建图。

局部地图类似于slidewindow一样，随时的增删地图中的点，来跟随运动


1. 在该project中，关键帧是如何选取的？

      我们在查看了0.3project之后，相比较于0.2project，就是在void VisualOdometry::poseEstimationPnP()函数里面使用了g2o对相机的位姿进行了优化，而0.4project中则使用了局部地图，而前两个project中的位姿则主要是依靠前后帧的关系。那么关键帧是如何选取的呢？

     为什么要选取关键帧，这一点我们都明白，因为如果相机的位置没有发生变化，而你还是在不断的计算，这样会浪费大量的计算资源。但是通过VisualOdometry,我发现前两个project（0.2/0.3）并没有用到这些keyframe。在0.4版本中则实际用到了这些keyframe。 

    如何选取关键帧呢，主要是通过checkKeyFrame()这个函数来判断，如果旋转矩阵或者平移矩阵的范数太小，即变化（motion）太小了，则视为非关键帧。


2. VisualOdometry中的位姿优化，到底是每一帧都优化了，还是只优化关键帧？

      在0.3project中我们可以观察到在确定关键帧之前求位姿中已经使用了bundle adjustment去优化了位姿（即每一帧都已经优化了），但是书中也说明了只对关键帧进行仔细优化，仔细优化又是什么呢？留到以后在解决吧。

3. 0.4project中的局部地图如何做？






第一帧的T_c_w_到底是怎么初始化的,
每次createFrame()创建帧的时候,new Frame(factory_id++),使用的Frame构造函数,默认的 SE3 T_c_w=SE3()为零位
第一帧的T_c_w_是SE3(),零位

还有这句curr_-> T_c_w_= ref_->T_c_w_;当前帧的T_c_w_是从哪里得来然后覆盖的.
当前帧的T_c_w_是当前帧的T_c_w_estimated_通过,PnP和BA得到的






两两帧的视觉里程计:
1. 设置参数配置文件config
2. 建立指向里程计的指针vo,并初始化
	1.State设置为第一帧状态
	2. 参考帧/当前帧设置为空指针
	3. 创建新地图map
	4. 设置当前flann匹配器的参数为cv::flann::LshIndexParams(5,10,2) 
	5. 
3. 建立相机模型的指针camera
4. 读取数据集信息,将数据集的文件名/时间戳存储起来
5. 循环进行slam

1. 创建新帧pFrame=createFrame(),只是把factory_id++
2. 设置新帧中的采用的
	相机模型的参数(焦距fx,fy,光心cx,cy,尺度depth_scale)
	彩色图color
	深度图depth
	时间戳rgb_times
3. 在vo中添加帧addFrame(pFrame)
	1. 如果是第一帧,则当前帧,参考帧都为第一帧
	2. 将第一帧添加到关键帧中去
	3. 提取关键点,计算描述子
